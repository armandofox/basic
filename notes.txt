-*- mode: LateX; -*-

From
http://www.computerworld.com/s/article/9217825/Midnight_programming_1979_vs._2011

``\ldots{}with Basic, I felt like I was rummaging through a small box
containing a few crude tools. With Python, I felt I had pushed open the
door to a massive but unlit tool warehouse and was darting in to grab
the few that I could see.'' 

Theme: democratizing force.  Whenever there was a tech milestone with
the *potential* to further democratize computing, BASIC was right there
with it, co-leading the charge.  BASIC has been in on the ground floor
of (at least) three "computing for everyone" or "democratizing
computing" ecosystems.  The WWW was the first one that *didn't* feature
BASIC prominently.

From~\cite[p. 135]{dormouse}:


Shortly after Gordon Moore came up with his predictive and eponymous
law, a few SAIL hackers, taking it to its logical conclusion, began
arriving at the idea of truly personal computers.  Ironically, 
John McCarthy, the SAIL co-founder who had earlier  promoted timesharing
at MIT as a way to expand access to computers, wasn't enthusiastic about
the idea: Why would you want your own underpowered computer when you
could have timeshared access to a much more powerful shared computer?
McCarthy would later refer to the ``one person---one computer'' idea as
``Xerox heresy'', referring to Xerox PARC, the lab just over the hill
from Stanford where most of the technologies of modern user-friendly personal
computing would be invented.

Indeed, Alan Kay had been a passionate
believer in the idea of personal computing, and after 2 years at
Stanford had left for PARC to pursue that vision.  His concept of the
Dynabook is the direct forerunner of notebook and tablet computers.

from \cite[p. 265]{dormouse}:

Albrecht and Allison explained to the new magazine's typesetter, Eric
Balakinsky, that Tiny BASIC was ``an exercise in computer programming''
that ``doesn't use very many bytes of memory.''
Balakinsky whimsically captured the former concept as ``calisthenics''
and the latter as ``orthodontia'' (what you do to avoid overbite).  Hence
\emph{Dr. Dobb's Journal of Tiny BASIC Calisthenics and Orthodontia}.

from \cite[pp. 281--284]{dormouse}:


MITS organized a bus tour/road show to promote the Altair to hobbyists.
One stop was in Palo Alto, at the Rickey's Hyatt House hotel a couple of
miles from Stanford.
No one knows for sure who illicitly ``borrowed'' the paper tape of
Altair BASIC (soon to be Micro-Soft BASIC) from the Altair booth during
the chaos of the promotional event, but somehow that tape reached Dan
Sokol, who had access to a high speed
paper-tape-duplicating machine at his engineering company.
In keeping with moderator Lee Felsenstein's  exhortation to 
Homebrew Computer Club meeting attendees
to ``bring back more [information] than you take,''
Sokol handed out over 70 copies of Altair BASIC at the next Homebrew meeting,
triggering the now-infamous ``open letter'' from Gates.

(Ironically, 
the share-alike ethos birthed at least 23 successful for-profit computer
companies, including Apple.)


from \cite[p. 114, 134]{veit}:

(Vendors began to realize that BASIC was no longer a differntiator but a
competitive necessity.)  Sphere Computer and Processor Technology
boasted low-cost computers that included BASIC, but the BASIC was
vaporware at the time of introduction.  Processor Technology 
contracted their BASIC out to NorthStar, which also licensed it to
others and ultimately undersold PT with its own computer,
and Sphere's BASIC underperformed when finally
released.  Both companies quickly went under.



The 6502 has had pop culture appearances in Futurama
(
http://spectrum.ieee.org/semiconductors/processors/the-truth-about-benders-brain
) and The Terminator (screenshot in Wikipedia article on 6502; looks
like it's recognizably from one of the example programs in the Apple
ProDOS Technical Reference Manual!)


bas     
A (partial) license payment of \$10,500 from Apple to Microsoft for
Applesoft BASIC helped Microsoft through a shaky financial time


from \cite{commodore}:



from \cite{gates}:

(p92) In his ``open letter'' Gates claims to have used over \$40K of
computer time developing BASIC.  There is 
debate about whether this is an exaggeration, and rumors that he used
(Government-supported) Harvard computer time for this private project.

(p.95) Gates got hold of ANSI draft standard X3J2/76-01 attempting to
standardize BASIC, suggested they rework the standard to more closely
match Micro-Soft's existing BASIC, and then generally ignored the
standard in developing BASIC further.

(p.99) Gates was initially scornful of the 6502, viewing it
as underpowered, but Microsoft already
had a 6800 emulator and 6800 BASIC, and Ric Weiland (employee \#2) persuaded
Gates that the similarity of the 
6502 would make it an easy port.  Chuck Peddle had
cannily informed Weiland and others that he would license ``the first
good BASIC'' anyone produced for the 6502.  Marc McDonald (employee \#1)
ported the emulator and Weiland ported BASIC, but it wouldn't be in a real
product until Commodore bought MOS Technology and did the PET.

(p. 111) After Commodore Apple was the next licensee---Woz's
integer-only BASIC wasn't good enough, and the company was too busy to
create its own better BASIC---and in fact a down
payment on the license for Applesoft helped Microsoft at a time when
they were short on cash due to protracted litigation around MITS not
promoting Microsoft BASIC.  Applesoft was Microsoft BASIC plus some of
Woz's hi-res graphics routines adapted by Randy Wigginton.

(p. 169) Microsoft's deal with IBM was driven by the desire not to lose
the language business.  IBM was late debugging the prototype IBM PC, but
Microsoft's internal development tools, including an 8086 emulator,
allowed them to keep working on BASIC in parallel.  These tools and the
emulator-based methodology had been
born out of necessity---developing the original BASIC for the 8080---and
honed by other projects, such as the 6800 and 6502 ports.

(p. 245) Internal project MacBASIC edged out MS on the Mac, but it kept
getting delayed.  MS seized the opportunity and cranked out a shoddy
(inferior to its IBM counterpart even for screen editing, let alone
graphics) but
shipping BASIC in 6 months.

(p. 259) Gates fought for BASIC to be the ``macro language'' for 
Odyssey, an early and botched attempt at a spreadsheet to compete with
Lotus 1-2-3 that never worked because of Simonyi's strategy to
distribute p-code apps that would run on a ``Windows VM''.

(p 262) in the mid 80s, Pascal began to replace BASIC because academia
was in love with it.  Gates had always fought for BASIC, so while
Microsoft had a Pascal compiler, it was expensive (around \$300) and
clunky to use on small-memory machines.  Turbo Pascal streamlined away
the edit-compile-run cycle (like LISA on Apple II) and cost \$50, and
there went Microsoft's language business for academia.

(p 264) in early days, BASIC cost more than DOS and generated more
revenue, typically going for \$30 per machine license in quantity with
OEMs signing deals worth a couple of hundred thousand dollars at a
time.  In 1984 it provided nearly $1/4$ of gross revenues.

(p 449) Gates always firmly believed that interpreted languages would
take over the world, and that BASIC would be right up there because of
its ease of use.  His personal loyalty to his ``first love'' eventually
became a liability when BASIC fell out of favor.  ``It's the one thing I
understand, I guess,'' said Bill of his passion for BASIC---not an
unusual reaction among programmers!


From \cite{apple2}:

UpTime was a magazine published on disk from 1984--88.  
In its final year, game author \w{John Romero}, who would become famous for
Wolfenstein 3D, Doom, etc., published an Applesoft BASIC add-on library
for hi-res graphics called GraBASIC that allowed Applesoft programmers
to use sophisticated graphics techniques that previously required
assembly language programming.
In the final issue, Romero published a game called
\weblink{http://rome.ro/games_dangerous_dave.php}{Dangerous Dave in the
  Deserted Pirate's Hideout}  as a  demonstration of how to use the
library. 

